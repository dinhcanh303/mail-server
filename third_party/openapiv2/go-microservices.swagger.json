{
  "swagger": "2.0",
  "info": {
    "title": "Go Microservices",
    "version": "1.0.0",
    "contact": {
      "name": "Dinh Canh",
      "url": "https://github.com/dinhcanh303",
      "email": "dinhcanhng303@gmail.com"
    }
  },
  "tags": [
    {
      "name": "AuthService"
    },
    {
      "name": "LikeService"
    },
    {
      "name": "UploadService"
    },
    {
      "name": "CommentService"
    },
    {
      "name": "GroupService"
    },
    {
      "name": "NotiService"
    },
    {
      "name": "PostService"
    },
    {
      "name": "SearchService"
    }
  ],
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/attachments": {
      "get": {
        "summary": "Get Attachments By Type",
        "operationId": "UploadService_GetAttachmentsByType",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAttachmentsByTypeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "attachableType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "attachableId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "UploadService"
        ]
      }
    },
    "/api/v1/auth/signin": {
      "post": {
        "summary": "SignIn application",
        "operationId": "AuthService_SignIn",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SignInResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SignInRequest"
            }
          }
        ],
        "tags": [
          "AuthService"
        ]
      }
    },
    "/api/v1/auth/signup": {
      "post": {
        "summary": "SignUp application",
        "operationId": "AuthService_SignUp",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SignUpResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SignUpRequest"
            }
          }
        ],
        "tags": [
          "AuthService"
        ]
      }
    },
    "/api/v1/auth/verify": {
      "get": {
        "summary": "Verify token",
        "operationId": "AuthService_Verify",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1VerifyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "AuthService"
        ]
      }
    },
    "/api/v1/comments": {
      "post": {
        "summary": "Create Comment",
        "operationId": "CommentService_CreateComment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateCommentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateCommentRequest"
            }
          }
        ],
        "tags": [
          "CommentService"
        ]
      }
    },
    "/api/v1/comments/{comment.id}": {
      "put": {
        "summary": "Update Comment",
        "operationId": "CommentService_UpdateComment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateCommentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "comment.id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "comment": {
                  "type": "object",
                  "properties": {
                    "postId": {
                      "type": "string"
                    },
                    "userId": {
                      "type": "string"
                    },
                    "replyId": {
                      "type": "string"
                    },
                    "replyName": {
                      "type": "string"
                    },
                    "tagIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "tagNames": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "content": {
                      "type": "string"
                    },
                    "parentCommentId": {
                      "type": "string"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        ],
        "tags": [
          "CommentService"
        ]
      }
    },
    "/api/v1/comments/{commentId}/comments": {
      "get": {
        "summary": "Get Comment By Comment ID",
        "operationId": "CommentService_GetCommentsByCommentID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetCommentsByCommentIDResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "CommentService"
        ]
      }
    },
    "/api/v1/comments/{commentId}/count": {
      "get": {
        "summary": "Count Comment By Comment ID",
        "operationId": "CommentService_CountCommentByCommentID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CountCommentByCommentIDResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "CommentService"
        ]
      }
    },
    "/api/v1/comments/{commentId}/likes": {
      "get": {
        "summary": "Get Info Likes by Comment ID",
        "operationId": "LikeService_GetLikesInfoByCommentID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetLikesInfoByCommentIDResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "LikeService"
        ]
      }
    },
    "/api/v1/comments/{id}": {
      "get": {
        "summary": "Get Comment",
        "operationId": "CommentService_GetComment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetCommentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "CommentService"
        ]
      },
      "delete": {
        "summary": "Delete Comment",
        "operationId": "CommentService_DeleteComment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteCommentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "CommentService"
        ]
      }
    },
    "/api/v1/feed": {
      "get": {
        "summary": "Get Feed",
        "operationId": "PostService_NewFeed",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1NewFeedResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "PostService"
        ]
      }
    },
    "/api/v1/group-members": {
      "post": {
        "summary": "Create group member",
        "operationId": "GroupService_CreateGroupMember",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateGroupMemberResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateGroupMemberRequest"
            }
          }
        ],
        "tags": [
          "GroupService"
        ]
      }
    },
    "/api/v1/group-members/{groupId}": {
      "get": {
        "summary": "Get all group member",
        "operationId": "GroupService_GetGroupMembers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetGroupMembersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "GroupService"
        ]
      }
    },
    "/api/v1/group-members/{groupMember.id}": {
      "put": {
        "summary": "Update group member",
        "operationId": "GroupService_UpdateGroupMember",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateGroupMemberResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "groupMember.id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "groupMember": {
                  "type": "object",
                  "properties": {
                    "groupId": {
                      "type": "string"
                    },
                    "userId": {
                      "type": "string"
                    },
                    "role": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        ],
        "tags": [
          "GroupService"
        ]
      }
    },
    "/api/v1/group-members/{id}": {
      "delete": {
        "summary": "Delete group member",
        "operationId": "GroupService_DeleteGroupMember",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteGroupMemberResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "GroupService"
        ]
      }
    },
    "/api/v1/groups": {
      "get": {
        "summary": "Get all groups",
        "operationId": "GroupService_GetGroups",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetGroupsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "GroupService"
        ]
      },
      "post": {
        "summary": "Create group",
        "operationId": "GroupService_CreateGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateGroupRequest"
            }
          }
        ],
        "tags": [
          "GroupService"
        ]
      }
    },
    "/api/v1/groups/feed": {
      "get": {
        "summary": "Get New Feed of Groups",
        "operationId": "PostService_NewFeedGroups",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1NewFeedGroupsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "PostService"
        ]
      }
    },
    "/api/v1/groups/{group.id}": {
      "put": {
        "summary": "Update group",
        "operationId": "GroupService_UpdateGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "group.id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "group": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "userId": {
                      "type": "string"
                    },
                    "profileUrl": {
                      "type": "string"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        ],
        "tags": [
          "GroupService"
        ]
      }
    },
    "/api/v1/groups/{groupId}/feed": {
      "get": {
        "summary": "Get Posts By Group ID",
        "operationId": "PostService_GetPostsByGroupId",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetPostsByGroupIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "PostService"
        ]
      }
    },
    "/api/v1/groups/{id}": {
      "get": {
        "summary": "Get group",
        "operationId": "GroupService_GetGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "GroupService"
        ]
      },
      "delete": {
        "summary": "Delete group",
        "operationId": "GroupService_DeleteGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "GroupService"
        ]
      }
    },
    "/api/v1/likes": {
      "post": {
        "summary": "Create Like",
        "operationId": "LikeService_CreateLike",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateLikeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateLikeRequest"
            }
          }
        ],
        "tags": [
          "LikeService"
        ]
      }
    },
    "/api/v1/likes/{id}": {
      "delete": {
        "summary": "Delete Like",
        "operationId": "LikeService_DeleteLike",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteLikeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "LikeService"
        ]
      }
    },
    "/api/v1/likes/{like.id}": {
      "put": {
        "summary": "Update Like",
        "operationId": "LikeService_UpdateLike",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateLikeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "like.id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "like": {
                  "type": "object",
                  "properties": {
                    "emoji": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "tags": [
          "LikeService"
        ]
      }
    },
    "/api/v1/logout": {
      "get": {
        "summary": "Logout",
        "operationId": "AuthService_Logout",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1LogoutResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "AuthService"
        ]
      }
    },
    "/api/v1/notifications": {
      "get": {
        "summary": "Get a list of notifications by options",
        "operationId": "NotiService_GetNotifications",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetNotificationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "options",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "NotiService"
        ]
      }
    },
    "/api/v1/notifications/count": {
      "get": {
        "summary": "Get count of notifications unread",
        "operationId": "NotiService_CountNotificationsUnread",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CountNotificationsUnreadResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "NotiService"
        ]
      }
    },
    "/api/v1/notifications/{id}": {
      "put": {
        "summary": "Read a notification",
        "operationId": "NotiService_ReadNotification",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ReadNotificationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "tags": [
          "NotiService"
        ]
      }
    },
    "/api/v1/optional/attachments": {
      "get": {
        "summary": "Get Attachments By Optional",
        "operationId": "UploadService_GetAttachmentsByOptional",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAttachmentsByOptionalResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "attachableType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "mimeType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entityUploadId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "UploadService"
        ]
      }
    },
    "/api/v1/posts": {
      "post": {
        "summary": "Create Post",
        "operationId": "PostService_CreatePost",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreatePostResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreatePostRequest"
            }
          }
        ],
        "tags": [
          "PostService"
        ]
      }
    },
    "/api/v1/posts/{id}": {
      "get": {
        "summary": "Get Post",
        "operationId": "PostService_GetPost",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetPostResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "PostService"
        ]
      },
      "delete": {
        "summary": "Delete Post",
        "operationId": "PostService_DeletePost",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeletePostResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "PostService"
        ]
      }
    },
    "/api/v1/posts/{id}/normal": {
      "get": {
        "summary": "Get Post Normal",
        "operationId": "PostService_GetPostNormal",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetPostNormalResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "PostService"
        ]
      }
    },
    "/api/v1/posts/{post.id}": {
      "put": {
        "summary": "Update Post",
        "operationId": "PostService_UpdatePost",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdatePostResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "post.id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "post": {
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "string"
                    },
                    "bgContent": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "userId": {
                      "type": "string"
                    },
                    "groupId": {
                      "type": "string"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        ],
        "tags": [
          "PostService"
        ]
      }
    },
    "/api/v1/posts/{postId}/comments": {
      "get": {
        "summary": "Get Comment By Post ID",
        "operationId": "CommentService_GetCommentsByPostID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetCommentsByPostIDResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "CommentService"
        ]
      }
    },
    "/api/v1/posts/{postId}/comments/count": {
      "get": {
        "summary": "Count Comment By Post ID",
        "operationId": "CommentService_CountCommentByPostID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CountCommentByPostIDResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "CommentService"
        ]
      }
    },
    "/api/v1/posts/{postId}/likes": {
      "get": {
        "summary": "Get Info Likes by Post ID",
        "operationId": "LikeService_GetLikesInfoByPostID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetLikesInfoByPostIDResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "LikeService"
        ]
      }
    },
    "/api/v1/profile": {
      "get": {
        "summary": "Get Profile of User",
        "operationId": "AuthService_GetProfile",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetProfileResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AuthService"
        ]
      }
    },
    "/api/v1/refresh-token": {
      "get": {
        "summary": "Handle Refresh Token",
        "operationId": "AuthService_HandleRefreshToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1HandleRefreshTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "AuthService"
        ]
      }
    },
    "/api/v1/search": {
      "get": {
        "summary": "Search User and Group by Melisearch",
        "operationId": "SearchService_Search",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SearchResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "SearchService"
        ]
      }
    },
    "/api/v1/users": {
      "get": {
        "summary": "Get All User",
        "operationId": "AuthService_GetUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetUsersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "AuthService"
        ]
      }
    },
    "/api/v1/users/current-day/birthdays": {
      "get": {
        "summary": "Get Users Birth Day by Current Day",
        "operationId": "AuthService_GetUsersBirthDayByCurrentDay",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetUsersBirthDayByCurrentDayResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "AuthService"
        ]
      }
    },
    "/api/v1/users/current-month/birthdays": {
      "get": {
        "summary": "Get Users Birth Day by Current Month",
        "operationId": "AuthService_GetUsersBirthDayByCurrentMonth",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetUsersBirthDayByCurrentMonthResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "AuthService"
        ]
      }
    },
    "/api/v1/users/settings": {
      "put": {
        "summary": "Set Avatar User",
        "operationId": "AuthService_UpdateUserSettings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateUserSettingsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateUserSettingsRequest"
            }
          }
        ],
        "tags": [
          "AuthService"
        ]
      }
    },
    "/api/v1/users/{groupId}/invite": {
      "get": {
        "summary": "Get All User can invite Group",
        "operationId": "AuthService_GetUsersInviteByGroupId",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetUsersInviteGroupIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "AuthService"
        ]
      }
    },
    "/api/v1/users/{id}/avatar": {
      "get": {
        "summary": "Get Avatar User",
        "operationId": "UploadService_GetAvatarUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAvatarUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "UploadService"
        ]
      }
    },
    "/api/v1/users/{user.id}": {
      "put": {
        "summary": "Set Avatar User",
        "operationId": "AuthService_UpdateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "user.id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string"
                    },
                    "firstName": {
                      "type": "string"
                    },
                    "lastName": {
                      "type": "string"
                    },
                    "fullName": {
                      "type": "string"
                    },
                    "nickName": {
                      "type": "string"
                    },
                    "avatarUrl": {
                      "type": "string"
                    },
                    "profileUrl": {
                      "type": "string"
                    },
                    "role": {
                      "type": "string"
                    },
                    "resigned": {
                      "type": "boolean"
                    },
                    "gender": {
                      "type": "boolean"
                    },
                    "phone": {
                      "type": "string"
                    },
                    "address": {
                      "type": "string"
                    },
                    "position": {
                      "type": "string"
                    },
                    "dateOfBirth": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "settings": {
                      "$ref": "#/definitions/protobufAny"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        ],
        "tags": [
          "AuthService"
        ]
      }
    },
    "/api/v1/users/{userId}/feed": {
      "get": {
        "summary": "Get Posts By User ID",
        "operationId": "PostService_GetPostsByUserId",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetPostsByUserIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "PostService"
        ]
      }
    },
    "/api/v1/users/{userId}/group-ids": {
      "get": {
        "summary": "Get all group id by user id",
        "operationId": "GroupService_GetGroupIdsByUserId",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetGroupIdsByUserIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "GroupService"
        ]
      }
    },
    "/api/v1/users/{userId}/groups": {
      "get": {
        "summary": "Get all group member",
        "operationId": "GroupService_GetGroupsByUserId",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetGroupsByUserIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "GroupService"
        ]
      }
    },
    "/api/v1/users/{userId}/user-ids": {
      "get": {
        "summary": "Get All User Id By User Id",
        "operationId": "AuthService_GetUserIdsOfCompanyByUserId",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetUserIdsOfCompanyByUserIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AuthService"
        ]
      }
    }
  },
  "definitions": {
    "googlerpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com. As of May 2023, there are no widely used type server\nimplementations and no plans to implement one.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        }
      },
      "additionalProperties": {},
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n    // or ...\n    if (any.isSameTypeAs(Foo.getDefaultInstance())) {\n      foo = any.unpack(Foo.getDefaultInstance());\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := \u0026pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "protobufNullValue": {
      "type": "string",
      "enum": [
        "NULL_VALUE"
      ],
      "default": "NULL_VALUE",
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\nThe JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
    },
    "v1Attachment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "attachableType": {
          "type": "string"
        },
        "attachableId": {
          "type": "string"
        },
        "entityUploadId": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "filename": {
          "type": "string"
        },
        "extension": {
          "type": "string"
        },
        "mimeType": {
          "type": "string"
        },
        "folder": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "urlThumbnail": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1Comment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "postId": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "replyId": {
          "type": "string"
        },
        "replyName": {
          "type": "string"
        },
        "tagIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tagNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "content": {
          "type": "string"
        },
        "parentCommentId": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1CommentHasChildren": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "postId": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "replyId": {
          "type": "string"
        },
        "replyName": {
          "type": "string"
        },
        "tagIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tagNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "content": {
          "type": "string"
        },
        "parentCommentId": {
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/v1User"
        },
        "children": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CommentHasMetadata"
          }
        },
        "likes": {
          "$ref": "#/definitions/v1LikeInfo"
        },
        "attachments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Attachment"
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1CommentHasMetadata": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "postId": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "replyId": {
          "type": "string"
        },
        "replyName": {
          "type": "string"
        },
        "tagIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tagNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "content": {
          "type": "string"
        },
        "parentCommentId": {
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/v1User"
        },
        "likes": {
          "$ref": "#/definitions/v1LikeInfo"
        },
        "attachments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Attachment"
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1CommentRequest": {
      "type": "object",
      "properties": {
        "postId": {
          "type": "string"
        },
        "replyId": {
          "type": "string"
        },
        "tagIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "content": {
          "type": "string"
        },
        "parentCommentId": {
          "type": "string"
        }
      }
    },
    "v1CountCommentByCommentIDResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1CountCommentByPostIDResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1CountNotificationsUnreadResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1CreateCommentRequest": {
      "type": "object",
      "properties": {
        "comment": {
          "$ref": "#/definitions/v1CommentRequest"
        }
      }
    },
    "v1CreateCommentResponse": {
      "type": "object",
      "properties": {
        "comment": {
          "$ref": "#/definitions/v1Comment"
        }
      }
    },
    "v1CreateGroupMemberRequest": {
      "type": "object",
      "properties": {
        "groupMember": {
          "$ref": "#/definitions/v1GroupMemberRequest"
        }
      }
    },
    "v1CreateGroupMemberResponse": {
      "type": "object",
      "properties": {
        "groupMember": {
          "$ref": "#/definitions/v1GroupMember"
        }
      }
    },
    "v1CreateGroupRequest": {
      "type": "object",
      "properties": {
        "group": {
          "$ref": "#/definitions/v1GroupRequest"
        }
      }
    },
    "v1CreateGroupResponse": {
      "type": "object",
      "properties": {
        "group": {
          "$ref": "#/definitions/v1Group"
        }
      }
    },
    "v1CreateLikeRequest": {
      "type": "object",
      "properties": {
        "like": {
          "$ref": "#/definitions/v1LikeRequest"
        }
      }
    },
    "v1CreateLikeResponse": {
      "type": "object",
      "properties": {
        "like": {
          "$ref": "#/definitions/v1Like"
        }
      }
    },
    "v1CreatePostRequest": {
      "type": "object",
      "properties": {
        "post": {
          "$ref": "#/definitions/v1PostRequest"
        }
      }
    },
    "v1CreatePostResponse": {
      "type": "object",
      "properties": {
        "post": {
          "$ref": "#/definitions/v1Post"
        }
      }
    },
    "v1DeleteCommentResponse": {
      "type": "object",
      "properties": {
        "deleted": {
          "type": "boolean"
        }
      }
    },
    "v1DeleteGroupMemberResponse": {
      "type": "object",
      "properties": {
        "deleted": {
          "type": "boolean"
        }
      }
    },
    "v1DeleteGroupResponse": {
      "type": "object",
      "properties": {
        "deleted": {
          "type": "boolean"
        }
      }
    },
    "v1DeleteLikeResponse": {
      "type": "object",
      "properties": {
        "deleted": {
          "type": "boolean"
        }
      }
    },
    "v1DeletePostResponse": {
      "type": "object",
      "properties": {
        "deleted": {
          "type": "boolean"
        }
      }
    },
    "v1GetAttachmentsByOptionalResponse": {
      "type": "object",
      "properties": {
        "attachments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Attachment"
          }
        }
      }
    },
    "v1GetAttachmentsByTypeResponse": {
      "type": "object",
      "properties": {
        "attachments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Attachment"
          }
        }
      }
    },
    "v1GetAvatarUserResponse": {
      "type": "object",
      "properties": {
        "attachment": {
          "$ref": "#/definitions/v1Attachment"
        }
      }
    },
    "v1GetCommentResponse": {
      "type": "object",
      "properties": {
        "comment": {
          "$ref": "#/definitions/v1Comment"
        }
      }
    },
    "v1GetCommentsByCommentIDResponse": {
      "type": "object",
      "properties": {
        "comments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CommentHasMetadata"
          }
        }
      }
    },
    "v1GetCommentsByPostIDResponse": {
      "type": "object",
      "properties": {
        "comments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CommentHasChildren"
          }
        }
      }
    },
    "v1GetGroupIdsByUserIdResponse": {
      "type": "object",
      "properties": {
        "groupIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1GetGroupMembersResponse": {
      "type": "object",
      "properties": {
        "groupMembers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1GroupMemberMetadata"
          }
        }
      }
    },
    "v1GetGroupResponse": {
      "type": "object",
      "properties": {
        "group": {
          "$ref": "#/definitions/v1Group"
        },
        "countGroupMembers": {
          "type": "string",
          "format": "int64"
        },
        "roleGroupMember": {
          "type": "string"
        }
      }
    },
    "v1GetGroupsByUserIdResponse": {
      "type": "object",
      "properties": {
        "groups": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Group"
          }
        }
      }
    },
    "v1GetGroupsResponse": {
      "type": "object",
      "properties": {
        "groups": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Group"
          }
        }
      }
    },
    "v1GetLikesInfoByCommentIDResponse": {
      "type": "object",
      "properties": {
        "likes": {
          "$ref": "#/definitions/v1LikeInfo"
        }
      }
    },
    "v1GetLikesInfoByPostIDResponse": {
      "type": "object",
      "properties": {
        "likes": {
          "$ref": "#/definitions/v1LikeInfo"
        }
      }
    },
    "v1GetNotificationsResponse": {
      "type": "object",
      "properties": {
        "notifications": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Notification"
          }
        }
      }
    },
    "v1GetPostNormalResponse": {
      "type": "object",
      "properties": {
        "post": {
          "$ref": "#/definitions/v1Post"
        }
      }
    },
    "v1GetPostResponse": {
      "type": "object",
      "properties": {
        "post": {
          "$ref": "#/definitions/v1Post"
        },
        "user": {
          "$ref": "#/definitions/v1User"
        },
        "group": {
          "$ref": "#/definitions/v1Group"
        },
        "attachments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Attachment"
          }
        },
        "likes": {
          "$ref": "#/definitions/v1LikeInfo"
        },
        "countComments": {
          "type": "string",
          "format": "int64",
          "title": "repeated comment.CommentHasChildren comments = 5;"
        }
      }
    },
    "v1GetPostsByGroupIdResponse": {
      "type": "object",
      "properties": {
        "posts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1GetPostResponse"
          }
        }
      }
    },
    "v1GetPostsByUserIdResponse": {
      "type": "object",
      "properties": {
        "posts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1GetPostResponse"
          }
        }
      }
    },
    "v1GetProfileResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/v1User"
        }
      }
    },
    "v1GetUserIdsOfCompanyByUserIdResponse": {
      "type": "object",
      "properties": {
        "userIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1GetUsersBirthDayByCurrentDayResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1User"
          }
        }
      }
    },
    "v1GetUsersBirthDayByCurrentMonthResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1User"
          }
        }
      }
    },
    "v1GetUsersInviteGroupIdResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1User"
          }
        }
      }
    },
    "v1GetUsersResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1User"
          }
        }
      }
    },
    "v1Group": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "userId": {
          "type": "string"
        },
        "profileUrl": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1GroupMember": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "groupId": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "role": {
          "type": "integer",
          "format": "int32"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1GroupMemberMetadata": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "groupId": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/v1User"
        },
        "role": {
          "type": "integer",
          "format": "int32"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1GroupMemberRequest": {
      "type": "object",
      "properties": {
        "groupId": {
          "type": "string"
        },
        "role": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1GroupRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "profileUrl": {
          "type": "integer",
          "format": "int32"
        },
        "userIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1HandleRefreshTokenResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/v1User"
        },
        "accessToken": {
          "type": "string"
        },
        "refreshToken": {
          "type": "string"
        }
      }
    },
    "v1Like": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "emoji": {
          "type": "string"
        },
        "likeableType": {
          "type": "string"
        },
        "likeableId": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1LikeInfo": {
      "type": "object",
      "properties": {
        "yourLikedEmoji": {
          "type": "string"
        },
        "yourLike": {
          "type": "string",
          "format": "int64"
        },
        "othersLikedEmojis": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "othersLikes": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1LikeRequest": {
      "type": "object",
      "properties": {
        "emoji": {
          "type": "string"
        },
        "likeableType": {
          "type": "string"
        },
        "likeableId": {
          "type": "string"
        }
      }
    },
    "v1LikeUpdateRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "emoji": {
          "type": "string"
        }
      }
    },
    "v1LogoutResponse": {
      "type": "object"
    },
    "v1NewFeedGroupsResponse": {
      "type": "object",
      "properties": {
        "posts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1GetPostResponse"
          }
        }
      }
    },
    "v1NewFeedResponse": {
      "type": "object",
      "properties": {
        "posts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1GetPostResponse"
          }
        }
      }
    },
    "v1Notification": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "actorId": {
          "type": "string"
        },
        "senderId": {
          "type": "string"
        },
        "actor": {
          "$ref": "#/definitions/v1User"
        },
        "data": {
          "type": "object"
        },
        "objectType": {
          "type": "string"
        },
        "objectId": {
          "type": "string"
        },
        "readAt": {
          "type": "string",
          "format": "date-time"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1Post": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "bgContent": {
          "type": "string"
        },
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "userId": {
          "type": "string"
        },
        "groupId": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1PostRequest": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        },
        "bgContent": {
          "type": "string"
        },
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "groupId": {
          "type": "string"
        }
      }
    },
    "v1ReadNotificationResponse": {
      "type": "object"
    },
    "v1Search": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "fullName": {
          "type": "string"
        },
        "nickName": {
          "type": "string"
        },
        "position": {
          "type": "string"
        },
        "avatarUrl": {
          "type": "string"
        },
        "profileUrl": {
          "type": "string"
        }
      }
    },
    "v1SearchResponse": {
      "type": "object",
      "properties": {
        "searches": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Search"
          }
        }
      }
    },
    "v1SignInRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "v1SignInResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/v1User"
        },
        "accessToken": {
          "type": "string"
        },
        "refreshToken": {
          "type": "string"
        }
      }
    },
    "v1SignUpRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        }
      }
    },
    "v1SignUpResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/v1User"
        },
        "accessToken": {
          "type": "string"
        },
        "refreshToken": {
          "type": "string"
        }
      }
    },
    "v1UpdateCommentResponse": {
      "type": "object",
      "properties": {
        "comment": {
          "$ref": "#/definitions/v1Comment"
        }
      }
    },
    "v1UpdateGroupMemberResponse": {
      "type": "object",
      "properties": {
        "groupMember": {
          "$ref": "#/definitions/v1GroupMember"
        }
      }
    },
    "v1UpdateGroupResponse": {
      "type": "object",
      "properties": {
        "group": {
          "$ref": "#/definitions/v1Group"
        }
      }
    },
    "v1UpdateLikeResponse": {
      "type": "object",
      "properties": {
        "like": {
          "$ref": "#/definitions/v1Like"
        }
      }
    },
    "v1UpdatePostResponse": {
      "type": "object",
      "properties": {
        "post": {
          "$ref": "#/definitions/v1Post"
        }
      }
    },
    "v1UpdateUserResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/v1User"
        }
      }
    },
    "v1UpdateUserSettingsRequest": {
      "type": "object",
      "properties": {
        "postStatus": {
          "type": "integer",
          "format": "int32"
        },
        "systemTheme": {
          "type": "string"
        }
      }
    },
    "v1UpdateUserSettingsResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/v1User"
        }
      }
    },
    "v1User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "fullName": {
          "type": "string"
        },
        "nickName": {
          "type": "string"
        },
        "avatarUrl": {
          "type": "string"
        },
        "profileUrl": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "resigned": {
          "type": "boolean"
        },
        "gender": {
          "type": "boolean"
        },
        "phone": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "position": {
          "type": "string"
        },
        "dateOfBirth": {
          "type": "string",
          "format": "date-time"
        },
        "settings": {
          "$ref": "#/definitions/protobufAny"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1VerifyResponse": {
      "type": "object"
    }
  },
  "externalDocs": {
    "description": "mail-server repository",
    "url": "https://github.com/dinhcanh303/mail-server"
  }
}
